{"version":3,"file":"js/8553.e3630a1c.js","mappings":"yMAEM,SAAUA,EACdC,EACAC,GAEA,MAAM,KAAEC,EAAF,KAAQC,EAAR,KAAcC,EAAd,KAAoBC,GAASJ,EAC7BK,EAAcN,EAAOO,OACrBC,EAAWC,KAAKC,OAAOV,GACvBW,EAAWF,KAAKG,OAAOZ,GAEvBa,GAASV,EAAOD,IAASI,EAAc,GACvCQ,GAAST,EAAOD,IAAUI,EAAWG,GAAa,GAExD,OAAOX,EAAOe,KAAI,CAACC,EAAOC,KACjB,CACLC,EAAGhB,EAAOe,EAAQJ,EAClBM,EAAGd,GAAQW,EAAQL,GAAYG,EAC/BE,WAGL,CAEK,SAAUI,EACdpB,EACAC,GAEA,MAAM,KAAEC,EAAF,KAAQC,EAAR,KAAcC,EAAd,KAAoBC,GAASJ,EAC7BK,EAAcN,EAAOO,OAC3B,IAAIC,EAAWC,KAAKC,OAAOV,GACvBW,EAAWF,KAAKG,OAAOZ,GAEvBW,EAAW,IAAGA,EAAW,GACzBH,EAAW,IAAGA,EAAW,GAE7B,MAAMK,EAAQV,EAAOG,EACfQ,GAAST,EAAOD,IAAUI,EAAWG,GAAa,GAClDU,EAAWhB,EAAOI,KAAKa,IAAIX,EAAWG,GAE5C,OAAOd,EAAOe,KAAI,CAACC,EAAOC,KACxB,MAAMM,EAASd,KAAKa,IAAIR,EAAQE,GAEhC,MAAO,CACLE,EAAGhB,EAAOe,EAAQJ,EAClBM,EAAGE,EAAWE,KACVP,EAAQ,GAAKO,EACjBA,SACAP,QALF,GAQH,CChDD,SAASQ,EAAKR,GACZ,OAAOS,SAAST,EAAO,GACxB,CAOK,SAAUU,EAAgBC,EAAWC,EAAWC,GACpD,OAAOL,EAAIG,EAAGT,EAAIW,EAAGX,KAAOM,EAAI,EAAII,EAAGV,IAAMM,EAAIG,EAAGR,EAAIU,EAAGV,KAAOK,EAAI,EAAII,EAAGT,EAC9E,CAEK,SAAUW,EAAaF,EAAWC,GACtC,OAAOpB,KAAKsB,KACVtB,KAAKuB,IAAIH,EAAGX,EAAIU,EAAGV,EAAG,GAAKT,KAAKuB,IAAIH,EAAGV,EAAIS,EAAGT,EAAG,GAEpD,CAEK,SAAUc,EAAQC,EAAWC,EAAaC,GAC9C,MAAMC,EAAS,CAAEnB,EAAGgB,EAAGhB,EAAIiB,EAAKjB,EAAGC,EAAGe,EAAGf,EAAIgB,EAAKhB,GAC5CZ,EAASE,KAAKsB,KAAMM,EAAOnB,EAAImB,EAAOnB,EAAMmB,EAAOlB,EAAIkB,EAAOlB,GAC9DmB,EAAa,CAAEpB,EAAGmB,EAAOnB,EAAIX,EAAQY,EAAGkB,EAAOlB,EAAIZ,GAEzD,MAAO,CACLW,EAAGiB,EAAKjB,EAAIoB,EAAWpB,EAAIkB,EAC3BjB,EAAGgB,EAAKhB,EAAImB,EAAWnB,EAAIiB,EAE9B,CCxBK,SAAUG,EAASC,EAAiBJ,EAAgBK,GAAO,EAAOlB,EAAS,IAC/E,MAAMmB,EAAQF,EAAOG,QACfC,EAAMJ,EAAOA,EAAOjC,OAAS,GAEnC,OACGkC,EAAO,IAAIC,EAAMxB,KAAKK,EAASmB,EAAMxB,EAAI,MAAMwB,EAAMxB,KAAKwB,EAAMvB,IAAM,IAAIuB,EAAMxB,KAAKwB,EAAMvB,KAC5FqB,EACGzB,KAAI,CAAC8B,EAAO5B,KACX,MAAM6B,EAAON,EAAOvB,EAAQ,GACtB8B,EAAOP,EAAOvB,EAAQ,IAAMyB,EAC5BM,EAAcF,GAAQpB,EAAeoB,EAAMD,EAAOE,GAExD,IAAKD,GAAQE,EACX,MAAO,IAAIH,EAAM3B,KAAK2B,EAAM1B,IAG9B,MAAM8B,EAAYxC,KAAKG,IACrBkB,EAAYiB,EAAMF,GAClBf,EAAYgB,EAAMD,IAEdK,EAAsBD,EAAY,EAAIb,EACtCe,EAAiBD,EAAsBD,EAAY,EAAIb,EAEvDgB,EAASnB,EAAOc,EAAMF,EAAOM,GAC7BE,EAAQpB,EAAOa,EAAMD,EAAOM,GAElC,MAAO,IAAIC,EAAOlC,KAAKkC,EAAOjC,KAAK0B,EAAM3B,KAAK2B,EAAM1B,KAAKkC,EAAMnC,KAAKmC,EAAMlC,GAA1E,IAEDmC,KAAK,KACPb,EAAO,IAAIG,EAAI1B,KAAKK,EAASmB,EAAMxB,EAAI,MAAQ,GAEnD,CCQD,OAAeqC,EAAAA,EAAAA,GAObC,EAAAA,GACAC,OAAO,CACPC,KAAM,aAENC,cAAc,EAEdC,MAAO,CACLC,SAAUC,QACVC,iBAAkB,CAChBC,KAAMC,OACNC,QAAS,KAEXC,eAAgB,CACdH,KAAMI,OACNF,QAAS,QAEXG,cAAe,CACbL,KAAMF,QACNI,SAAS,GAEXI,MAAO,CACLN,KAAMI,OACNF,QAAS,WAEXzB,KAAM,CACJuB,KAAMF,QACNI,SAAS,GAEXK,SAAU,CACRP,KAAMQ,MACNN,QAAS,IAAO,IAElBO,kBAAmB,CACjBT,KAAMI,OACNM,UAAYC,GAAgB,CAAC,MAAO,SAAU,OAAQ,SAASC,SAASD,GACxET,QAAS,OAEX3C,OAAQ,CACNyC,KAAM,CAACI,OAAQH,QACfC,QAAS,IAEXW,OAAQ,CACNb,KAAMQ,MACNN,QAAS,IAAO,IAElBY,UAAW,CACTd,KAAM,CAACC,OAAQG,QACfF,QAAS,GAEXa,UAAW,CACTf,KAAM,CAACI,OAAQH,QACfC,QAAS,GAEXc,QAAS,CACPhB,KAAM,CAACI,OAAQH,QACfC,QAAS,GAEXe,WAAYnB,QACZoB,OAAQ,CACNlB,KAAM,CAACF,QAASG,OAAQG,QACxBF,SAAS,GAEXF,KAAM,CACJA,KAAMI,OACNF,QAAS,QACTQ,UAAYC,GAAgB,CAAC,QAAS,OAAOC,SAASD,IAExD3D,MAAO,CACLgD,KAAMQ,MACNN,QAAS,IAAO,IAElBiB,MAAO,CACLnB,KAAM,CAACC,OAAQG,QACfF,QAAS,MAIbkB,KAAM,KAAM,CACVC,WAAY,IAGdC,SAAU,CACRC,gBACE,OAAOtB,OAAOuB,KAAKR,QAFb,EAIRS,cACE,OAAOxB,OAAOuB,KAAKL,MALb,EAORO,eACE,OAAOjE,SAAS+D,KAAKjE,OAAQ,GARvB,EAURoE,kBACE,OAAOlE,SAAS+D,KAAKV,UAAW,KAAO,CAXjC,EAaRc,cACE,IAAIrE,EAASiE,KAAKE,aAIlB,OAFIF,KAAKK,YAAWtE,GAAyC,IAA/BE,SAAS+D,KAAKV,UAAW,KAEhDvD,CAlBD,EAoBRuE,aACE,IAAIX,EAAQK,KAAKC,YAGjB,MAFkB,QAAdD,KAAKxB,OAAgBmB,EAAQ1E,KAAKC,IAAI8E,KAAKxE,MAAMT,OAASiF,KAAKO,WAAYZ,IAExEA,CAxBD,EA0BR7E,cACE,OAAOkF,KAAKxE,MAAMT,MA3BZ,EA6BRwF,aACE,GAAIP,KAAKnB,eAA+B,UAAdmB,KAAKxB,KAAkB,CAC/C,MAAMgC,EAAeR,KAAKD,eAAiBC,KAAKlF,YAAc,GAC9D,OAAQkF,KAAKC,YAAcO,GAAgBR,KAAKlF,WAFlD,CAIE,OAAO2F,WAAWT,KAAKT,YAAc,CAlCjC,EAqCR9E,WACE,GAAkB,QAAduF,KAAKxB,KAAgB,MAAO,CAAE9D,KAAM,EAAGC,KAAMqF,KAAKM,WAAY1F,KAAM,EAAGC,KAAMmF,KAAKE,cAEtF,MAAMV,EAAUQ,KAAKD,cAErB,MAAO,CACLrF,KAAM8E,EACN7E,KAAMqF,KAAKM,WAAad,EACxB5E,KAAM4E,EACN3E,KAAMmF,KAAKE,aAAeV,EA9CtB,EAiDRa,YACE,OAAO/B,QACL0B,KAAKP,YACLO,KAAKX,OAAOtE,OAAS,GACrBiF,KAAKU,aAAaC,MArDd,EAwDRC,eACE,MAAMvB,EAAS,GACTrC,EAASgD,KAAKa,QACdC,EAAM9D,EAAOjC,OAEnB,IAAK,IAAIgG,EAAI,EAAG1B,EAAOtE,OAAS+F,EAAKC,IAAK,CACxC,MAAMC,EAAOhE,EAAO+D,GACpB,IAAIvF,EAAQwE,KAAKX,OAAO0B,GAEnBvF,IACHA,EAAwB,kBAATwF,EACXA,EAAKxF,MACLwF,GAGN3B,EAAO4B,KAAK,CACVvF,EAAGsF,EAAKtF,EACRF,MAAOoD,OAAOpD,IAEjB,CAED,OAAO6D,CA7ED,EA+ER6B,mBACE,OAAOlB,KAAKxE,MAAMD,KAAIyF,GAAyB,kBAATA,EAAoBA,EAAOA,EAAKxF,OAhFhE,EAkFRqF,UACE,MAAqB,UAAdb,KAAKxB,KAAmBjE,EAAUyF,KAAKkB,iBAAkBlB,KAAKvF,UAAYmB,EAAQoE,KAAKkB,iBAAkBlB,KAAKvF,SAnF/G,EAqFR0G,QACE,IAAIxF,EAAIqE,KAAKE,aAEb,MADkB,UAAdF,KAAKxB,OAAkB7C,GAAK,GACzBA,CAxFD,EA0FRyF,UACE,OAAuB,IAAhBpB,KAAKN,OAAkB,EAAIjB,OAAOuB,KAAKN,OAC/C,GAGH2B,MAAO,CACL7F,MAAO,CACL8F,WAAW,EACXC,UACEvB,KAAKwB,WAAU,KACb,IACGxB,KAAK3B,UACQ,QAAd2B,KAAKxB,OACJwB,KAAKyB,MAAMC,KACZ,OAEF,MAAMA,EAAO1B,KAAKyB,MAAMC,KAClB3G,EAAS2G,EAAKC,iBAEf3B,KAAK/C,MAQRyE,EAAKE,MAAMC,gBAAkB,gBAC7BH,EAAKE,MAAME,WAAa,OACxBJ,EAAKE,MAAMG,UAAY,YACvBL,EAAKM,wBACLN,EAAKE,MAAME,WAAa,aAAa9B,KAAKzB,sBAAsByB,KAAKrB,iBACrE+C,EAAKE,MAAMG,UAAY,cAZvBL,EAAKE,MAAME,WAAa,OACxBJ,EAAKE,MAAMK,gBAAkBlH,EAAS,IAAMA,EAC5C2G,EAAKE,MAAMM,iBAAmBjH,KAAKa,IAAIf,GAAUiF,KAAKH,YAAc,IAAIsC,WACxET,EAAKM,wBACLN,EAAKE,MAAME,WAAa,qBAAqB9B,KAAKzB,sBAAsByB,KAAKrB,iBAC7E+C,EAAKE,MAAMM,iBAAmB,KAShClC,KAAKH,WAAa9E,CAAlB,GAEH,IAILqH,QAAS,CACPC,cACE,MAAMpD,EAAoBe,KAAKf,kBACzBF,EAAWiB,KAAKjB,SAASuD,QAI1BvD,EAAShE,QAAQgE,EAASkC,KAAK,IAEpC,MAAMH,EAAM7F,KAAKC,IAAI6D,EAAShE,OAAS,EAAG,GACpCwH,EAAQxD,EAASyD,UAAUjH,KAAI,CAACuD,EAAOrD,IAC3CuE,KAAKyC,eAAe,OAAQ,CAC1BC,MAAO,CACLC,OAAQlH,EAAQqF,EAChB,aAAchC,GAAS,oBAK7B,OAAOkB,KAAKyC,eAAe,OAAQ,CACjCzC,KAAKyC,eAAe,iBAAkB,CACpCC,MAAO,CACLE,GAAI5C,KAAK6C,KACTC,cAAe,iBACfC,GAA0B,SAAtB9D,EAA+B,OAAS,IAC5C+D,GAA0B,QAAtB/D,EAA8B,OAAS,IAC3CgE,GAA0B,UAAtBhE,EAAgC,OAAS,IAC7CiE,GAA0B,WAAtBjE,EAAiC,OAAS,MAE/CsD,IA7BA,EAgCPY,KAAMC,GACJ,OAAOpD,KAAKyC,eAAe,IAAK,CAC9Bb,MAAO,CACLyB,SAAU,IACVC,WAAY,SACZC,iBAAkB,eAClBtG,KAAM,iBAEPmG,EAxCE,EA0CPrG,UACE,MAAMC,EAASzC,EAAUyF,KAAKkB,iBAAkBlB,KAAKvF,UAErD,OAAOuF,KAAKyC,eAAe,OAAQ,CACjCC,MAAO,CACLc,EAAGzG,EAAQC,EAAQgD,KAAKoB,QAASpB,KAAK/C,KAAM+C,KAAKE,cACjDjD,KAAM+C,KAAK/C,KAAO,QAAQ+C,KAAK6C,QAAU,OACzCY,OAAQzD,KAAK/C,KAAO,OAAS,QAAQ+C,KAAK6C,SAE5Ca,IAAK,QAnDF,EAsDPC,UAAWC,GACT,MAAMR,EAAWpD,KAAKY,aAAarF,KAAI,CAACyF,EAAMD,IAC5Cf,KAAKyC,eAAe,OAAQ,CAC1BC,MAAO,CACLhH,EAAGsF,EAAKtF,EAAIkI,EAAU5D,KAAKO,WAAa,EACxC5E,EAAGqE,KAAKmB,MAAgC,IAAvBnB,KAAKG,gBACtB,YAAa1B,OAAOuB,KAAKV,YAAc,IAExC,CAACU,KAAK6D,SAAS7C,EAAMD,OAG1B,OAAOf,KAAKmD,KAAKC,EAjEZ,EAmEPS,SAAU7C,EAAqBvF,GAC7B,OAAOuE,KAAKU,aAAaC,MACrBX,KAAKU,aAAaC,MAAM,CAAElF,QAAOD,MAAOwF,EAAKxF,QAC7CwF,EAAKxF,KAtEJ,EAwEPI,UACE,IAAKoE,KAAKxE,OAASwE,KAAKlF,YAAc,EAAG,OAEzC,MAAMgJ,EAAOlI,EAAQoE,KAAKkB,iBAAkBlB,KAAKvF,UAC3CmJ,GAAW3I,KAAKa,IAAIgI,EAAK,GAAGpI,EAAIoI,EAAK,GAAGpI,GAAKsE,KAAKO,YAAc,EAEtE,OAAOP,KAAKyC,eAAe,MAAO,CAChCC,MAAO,CACLqB,QAAS,QACTC,QAAS,OAAOhE,KAAKM,cAAcN,KAAKI,gBAEzC,CACDJ,KAAKqC,cACLrC,KAAKiE,YAAYH,EAAMF,EAAS5D,KAAKO,WAAY,iBAAmBP,KAAK6C,MACzE7C,KAAKK,UAAYL,KAAK2D,UAAUC,QAAWM,EAC3ClE,KAAKyC,eAAe,IAAK,CACvBC,MAAO,CACL,YAAa,sBAAsB1C,KAAK6C,aACxC5F,KAAM,QAAQ+C,KAAK6C,UAEpB,CACD7C,KAAKyC,eAAe,OAAQ,CAC1BC,MAAO,CACLhH,EAAG,EACHC,EAAG,EACHgE,MAAOK,KAAKM,WACZvE,OAAQiE,KAAKjE,aAlGhB,EAwGPkI,YAAaH,EAAaF,EAAiBrE,EAAmBqD,GAC5D,MAAMuB,EAAkC,kBAAhBnE,KAAKN,OACzBM,KAAKN,OACLM,KAAKN,OAAS,EAAI,EAEtB,OAAOM,KAAKyC,eAAe,WAAY,CACrCC,MAAO,CACLE,GAAI,GAAGA,WAERkB,EAAKvI,KAAIyF,GACHhB,KAAKyC,eAAe,OAAQ,CACjCC,MAAO,CACLhH,EAAGsF,EAAKtF,EAAIkI,EACZjI,EAAGqF,EAAKrF,EACRgE,MAAOJ,EACPxD,OAAQiF,EAAKjF,OACbqI,GAAID,EACJE,GAAIF,IAEL,CACDnE,KAAK3B,SAAW2B,KAAKyC,eAAe,UAAW,CAC7CC,MAAO,CACL4B,cAAe,SACf3H,KAAM,EACND,GAAIsE,EAAKjF,OACTwI,IAAK,GAAGvE,KAAKzB,qBACbtB,KAAM,iBAELiH,MApIJ,EAwIPM,WACE,OAAOxE,KAAKyC,eAAe,MAAOzC,KAAKyE,aAAazE,KAAKlB,MAAO,CAC9D4D,MAAO,IACF1C,KAAK0E,OACRX,QAAS,QACT,eAAgB/D,KAAKO,YAAc,EACnCyD,QAAS,OAAOhE,KAAKL,SAASK,KAAKI,iBAEnC,CACFJ,KAAKqC,cACLrC,KAAKK,WAAaL,KAAK2D,WAAY3D,KAAKO,WAAa,GACrDP,KAAKjD,WAER,GAGH4H,OAAQC,GACN,KAAI5E,KAAKlF,YAAc,GAEvB,MAAqB,UAAdkF,KAAKxB,KAAmBwB,KAAKwE,WAAaxE,KAAKpE,SACvD,ICna4B,EAAgBiJ,W,WAAa,EAAS,EAAC,MAAOC,G,OAAiD,EAAC,Y,MAAC,EAAOD,QAAIE,M,MAAe,CAA0C,iBAAiBA,KAAgB,SAAUF,EAAIE,UAAUvF,iBAAQ,aAAauF,EAAAA,UAAUnI,MAAgB,QAAQiI,EAAIE,UAAUvJ,QAAM,SAAY,qBAArN,wBAA1D,YAAT,O,EAE5D,E,eCeA,GACAwJ,QAAAA,EAAAA,EACA5G,MAAAA,CACA2G,UAAAA,CACAvG,KAAAA,OACAyG,UAAAA,EACAvG,QAAAA,QAEAwG,QAAAA,CACA1G,KAAAA,OACAE,QAAAA,UC3BkQ,I,UCO9PyG,GAAY,OACd,EACAR,EACAS,GACA,EACA,KACA,KACA,MAIF,EAAeD,EAAiB,O,2DClB5BR,EAAQS,E,WCGZ,GACAhH,MAAAA,CACAiH,QAAAA,CACA7G,KAAAA,OACAE,QAAAA,QAEAwG,QAAAA,CACA1G,KAAAA,OACAE,QAAAA,SAGA4G,UACA,6BACAC,EAAAA,EAAAA,IAAAA,UAAAA,KAAAA,SACAA,EAAAA,EAAAA,IAAAA,UAAAA,KAAAA,SACAA,EAAAA,EAAAA,IAAAA,aAAAA,KAAAA,YAEA,EACAC,UACA,WAAA5F,EAAAA,SAAA6F,GAAA,iBACA,YACA,sCAEA,EACAC,gBACA,6BACAH,EAAAA,EAAAA,KAAAA,UAAAA,KAAAA,SACAA,EAAAA,EAAAA,KAAAA,UAAAA,KAAAA,SACAA,EAAAA,EAAAA,IAAAA,aAAAA,KAAAA,YAEA,EACAnD,QAAAA,CACAuD,YAAAA,EAAAA,IACA/F,EAAAA,SAAAA,IACAoB,EAAAA,MAAAA,SAAAA,IACA,QACA,kCACA,GAHA,GAMA,EAEA4E,QAAAA,GACA,qEACA,mBACA,EAEAC,WAAAA,GACA,wEACAC,QAAAA,IAAAA,cACA,mBACA,EAEAC,QAAAA,GACA,qEACA,mBACA,IC3DgQ,I,UFO5PZ,GAAY,OACd,EACAR,EACAS,GACA,EACA,KACA,KACA,MAIF,EAAeD,EAAiB,O,6DGbhC,OAAea,EAAAA,WAAAA,OAAW,CACxB9H,KAAM,YAENE,MAAO,CACLU,MAAOF,QAGTwD,QAAS,CACP6D,mBAAoBnH,EAAwBc,EAAkB,CAAC,GAC7D,MAA0B,kBAAfA,EAAKgC,QAEdsE,EAAAA,EAAAA,IAAa,0BAA2BlG,MAEjCJ,GAEiB,kBAAfA,EAAKuG,QAEdD,EAAAA,EAAAA,IAAa,0BAA2BlG,MAEjCJ,KAELwG,EAAAA,EAAAA,IAAWtH,GACbc,EAAKgC,MAAQ,IACRhC,EAAKgC,MACR,mBAAoB,GAAG9C,IACvB,eAAgB,GAAGA,KAEZA,IACTc,EAAKuG,MAAQ,IACRvG,EAAKuG,MACR,CAACrH,IAAQ,IAINc,EA3BF,EA8BP6E,aAAc3F,EAAwBc,EAAkB,CAAC,GACvD,GAA0B,kBAAfA,EAAKgC,MAId,OAFAsE,EAAAA,EAAAA,IAAa,0BAA2BlG,MAEjCJ,EAET,GAA0B,kBAAfA,EAAKuG,MAId,OAFAD,EAAAA,EAAAA,IAAa,0BAA2BlG,MAEjCJ,EAET,IAAIwG,EAAAA,EAAAA,IAAWtH,GACbc,EAAKgC,MAAQ,IACRhC,EAAKgC,MACR9C,MAAO,GAAGA,IACV,cAAe,GAAGA,UAEf,GAAIA,EAAO,CAChB,MAAOuH,EAAWC,GAAiBxH,EAAMqD,WAAWoE,OAAOC,MAAM,IAAK,GACtE5G,EAAKuG,MAAQ,IACRvG,EAAKuG,MACR,CAACE,EAAY,WAAW,GAEtBC,IACF1G,EAAKuG,MAAM,SAAWG,IAAiB,EAE1C,CACD,OAAO1G,CACR,I,uCCtEL,WAAmBoG,EAAAA,U","sources":["webpack://lowcode_demo/../../../src/components/VSparkline/helpers/core.ts","webpack://lowcode_demo/../../../src/components/VSparkline/helpers/math.ts","webpack://lowcode_demo/../../../src/components/VSparkline/helpers/path.ts","webpack://lowcode_demo/../../../src/components/VSparkline/VSparkline.ts","webpack://lowcode_demo/./src/custom-component/VSparkline/Component.vue","webpack://lowcode_demo/src/custom-component/VSparkline/Component.vue","webpack://lowcode_demo/./src/custom-component/VSparkline/Component.vue?0e32","webpack://lowcode_demo/./src/custom-component/VSparkline/Component.vue?75cd","webpack://lowcode_demo/./src/custom-component/common/OnEvent.vue","webpack://lowcode_demo/src/custom-component/common/OnEvent.vue","webpack://lowcode_demo/./src/custom-component/common/OnEvent.vue?976a","webpack://lowcode_demo/../../../src/mixins/colorable/index.ts","webpack://lowcode_demo/./src/utils/eventBus.js"],"sourcesContent":["import { Point, Boundary, Bar } from '../VSparkline'\n\nexport function genPoints (\n  values: number[],\n  boundary: Boundary\n): Point[] {\n  const { minX, maxX, minY, maxY } = boundary\n  const totalValues = values.length\n  const maxValue = Math.max(...values)\n  const minValue = Math.min(...values)\n\n  const gridX = (maxX - minX) / (totalValues - 1)\n  const gridY = (maxY - minY) / ((maxValue - minValue) || 1)\n\n  return values.map((value, index) => {\n    return {\n      x: minX + index * gridX,\n      y: maxY - (value - minValue) * gridY,\n      value,\n    }\n  })\n}\n\nexport function genBars (\n  values: number[],\n  boundary: Boundary\n): Bar[] {\n  const { minX, maxX, minY, maxY } = boundary\n  const totalValues = values.length\n  let maxValue = Math.max(...values)\n  let minValue = Math.min(...values)\n\n  if (minValue > 0) minValue = 0\n  if (maxValue < 0) maxValue = 0\n\n  const gridX = maxX / totalValues\n  const gridY = (maxY - minY) / ((maxValue - minValue) || 1)\n  const horizonY = maxY - Math.abs(minValue * gridY)\n\n  return values.map((value, index) => {\n    const height = Math.abs(gridY * value)\n\n    return {\n      x: minX + index * gridX,\n      y: horizonY - height +\n        +(value < 0) * height,\n      height,\n      value,\n    }\n  })\n}\n","import { Point } from '../VSparkline'\n\nfunction int (value: string | number): number {\n  return parseInt(value, 10)\n}\n\n/**\n * https://en.wikipedia.org/wiki/Collinearity\n * x=(x1+x2)/2\n * y=(y1+y2)/2\n */\nexport function checkCollinear (p0: Point, p1: Point, p2: Point): boolean {\n  return int(p0.x + p2.x) === int(2 * p1.x) && int(p0.y + p2.y) === int(2 * p1.y)\n}\n\nexport function getDistance (p1: Point, p2: Point): number {\n  return Math.sqrt(\n    Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2)\n  )\n}\n\nexport function moveTo (to: Point, from: Point, radius: number) {\n  const vector = { x: to.x - from.x, y: to.y - from.y }\n  const length = Math.sqrt((vector.x * vector.x) + (vector.y * vector.y))\n  const unitVector = { x: vector.x / length, y: vector.y / length }\n\n  return {\n    x: from.x + unitVector.x * radius,\n    y: from.y + unitVector.y * radius,\n  }\n}\n","import { Point } from '../VSparkline'\nimport { checkCollinear, getDistance, moveTo } from './math'\n\n/**\n * From https://github.com/unsplash/react-trend/blob/master/src/helpers/DOM.helpers.js#L18\n */\nexport function genPath (points: Point[], radius: number, fill = false, height = 75) {\n  const start = points.shift()!\n  const end = points[points.length - 1]\n\n  return (\n    (fill ? `M${start.x} ${height - start.x + 2} L${start.x} ${start.y}` : `M${start.x} ${start.y}`) +\n    points\n      .map((point, index) => {\n        const next = points[index + 1]\n        const prev = points[index - 1] || start\n        const isCollinear = next && checkCollinear(next, point, prev)\n\n        if (!next || isCollinear) {\n          return `L${point.x} ${point.y}`\n        }\n\n        const threshold = Math.min(\n          getDistance(prev, point),\n          getDistance(next, point)\n        )\n        const isTooCloseForRadius = threshold / 2 < radius\n        const radiusForPoint = isTooCloseForRadius ? threshold / 2 : radius\n\n        const before = moveTo(prev, point, radiusForPoint)\n        const after = moveTo(next, point, radiusForPoint)\n\n        return `L${before.x} ${before.y}S${point.x} ${point.y} ${after.x} ${after.y}`\n      })\n      .join('') +\n    (fill ? `L${end.x} ${height - start.x + 2} Z` : '')\n  )\n}\n","// Mixins\nimport Colorable from '../../mixins/colorable'\n\n// Utilities\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { genPoints, genBars } from './helpers/core'\nimport { genPath } from './helpers/path'\n\n// Types\nimport Vue, { VNode } from 'vue'\nimport { Prop, PropValidator } from 'vue/types/options'\n\nexport type SparklineItem = number | { value: number }\n\nexport type SparklineText = {\n  x: number\n  value: string\n}\n\nexport interface Boundary {\n  minX: number\n  minY: number\n  maxX: number\n  maxY: number\n}\n\nexport interface Point {\n  x: number\n  y: number\n  value: number\n}\n\nexport interface Bar {\n  x: number\n  y: number\n  height: number\n  value: number\n}\n\ninterface options extends Vue {\n  $refs: {\n    path: SVGPathElement\n  }\n}\n\nexport default mixins<options &\n/* eslint-disable indent */\n  ExtractVue<[\n    typeof Colorable\n  ]>\n/* eslint-enable indent */\n>(\n  Colorable\n).extend({\n  name: 'VSparkline',\n\n  inheritAttrs: false,\n\n  props: {\n    autoDraw: Boolean,\n    autoDrawDuration: {\n      type: Number,\n      default: 2000,\n    },\n    autoDrawEasing: {\n      type: String,\n      default: 'ease',\n    },\n    autoLineWidth: {\n      type: Boolean,\n      default: false,\n    },\n    color: {\n      type: String,\n      default: 'primary',\n    },\n    fill: {\n      type: Boolean,\n      default: false,\n    },\n    gradient: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<string[]>,\n    gradientDirection: {\n      type: String as Prop<'top' | 'bottom' | 'left' | 'right'>,\n      validator: (val: string) => ['top', 'bottom', 'left', 'right'].includes(val),\n      default: 'top',\n    },\n    height: {\n      type: [String, Number],\n      default: 75,\n    },\n    labels: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<SparklineItem[]>,\n    labelSize: {\n      type: [Number, String],\n      default: 7,\n    },\n    lineWidth: {\n      type: [String, Number],\n      default: 4,\n    },\n    padding: {\n      type: [String, Number],\n      default: 8,\n    },\n    showLabels: Boolean,\n    smooth: {\n      type: [Boolean, Number, String],\n      default: false,\n    },\n    type: {\n      type: String as Prop<'trend' | 'bar'>,\n      default: 'trend',\n      validator: (val: string) => ['trend', 'bar'].includes(val),\n    },\n    value: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<SparklineItem[]>,\n    width: {\n      type: [Number, String],\n      default: 300,\n    },\n  },\n\n  data: () => ({\n    lastLength: 0,\n  }),\n\n  computed: {\n    parsedPadding (): number {\n      return Number(this.padding)\n    },\n    parsedWidth (): number {\n      return Number(this.width)\n    },\n    parsedHeight (): number {\n      return parseInt(this.height, 10)\n    },\n    parsedLabelSize (): number {\n      return parseInt(this.labelSize, 10) || 7\n    },\n    totalHeight (): number {\n      let height = this.parsedHeight\n\n      if (this.hasLabels) height += parseInt(this.labelSize, 10) * 1.5\n\n      return height\n    },\n    totalWidth (): number {\n      let width = this.parsedWidth\n      if (this.type === 'bar') width = Math.max(this.value.length * this._lineWidth, width)\n\n      return width\n    },\n    totalValues (): number {\n      return this.value.length\n    },\n    _lineWidth (): number {\n      if (this.autoLineWidth && this.type !== 'trend') {\n        const totalPadding = this.parsedPadding * (this.totalValues + 1)\n        return (this.parsedWidth - totalPadding) / this.totalValues\n      } else {\n        return parseFloat(this.lineWidth) || 4\n      }\n    },\n    boundary (): Boundary {\n      if (this.type === 'bar') return { minX: 0, maxX: this.totalWidth, minY: 0, maxY: this.parsedHeight }\n\n      const padding = this.parsedPadding\n\n      return {\n        minX: padding,\n        maxX: this.totalWidth - padding,\n        minY: padding,\n        maxY: this.parsedHeight - padding,\n      }\n    },\n    hasLabels (): boolean {\n      return Boolean(\n        this.showLabels ||\n        this.labels.length > 0 ||\n        this.$scopedSlots.label\n      )\n    },\n    parsedLabels (): SparklineText[] {\n      const labels = []\n      const points = this._values\n      const len = points.length\n\n      for (let i = 0; labels.length < len; i++) {\n        const item = points[i]\n        let value = this.labels[i]\n\n        if (!value) {\n          value = typeof item === 'object'\n            ? item.value\n            : item\n        }\n\n        labels.push({\n          x: item.x,\n          value: String(value),\n        })\n      }\n\n      return labels\n    },\n    normalizedValues (): number[] {\n      return this.value.map(item => (typeof item === 'number' ? item : item.value))\n    },\n    _values (): Point[] | Bar[] {\n      return this.type === 'trend' ? genPoints(this.normalizedValues, this.boundary) : genBars(this.normalizedValues, this.boundary)\n    },\n    textY (): number {\n      let y = this.parsedHeight\n      if (this.type === 'trend') y -= 4\n      return y\n    },\n    _radius (): number {\n      return this.smooth === true ? 8 : Number(this.smooth)\n    },\n  },\n\n  watch: {\n    value: {\n      immediate: true,\n      handler () {\n        this.$nextTick(() => {\n          if (\n            !this.autoDraw ||\n            this.type === 'bar' ||\n            !this.$refs.path\n          ) return\n\n          const path = this.$refs.path\n          const length = path.getTotalLength()\n\n          if (!this.fill) {\n            path.style.transition = 'none'\n            path.style.strokeDasharray = length + ' ' + length\n            path.style.strokeDashoffset = Math.abs(length - (this.lastLength || 0)).toString()\n            path.getBoundingClientRect()\n            path.style.transition = `stroke-dashoffset ${this.autoDrawDuration}ms ${this.autoDrawEasing}`\n            path.style.strokeDashoffset = '0'\n          } else {\n            path.style.transformOrigin = 'bottom center'\n            path.style.transition = 'none'\n            path.style.transform = `scaleY(0)`\n            path.getBoundingClientRect()\n            path.style.transition = `transform ${this.autoDrawDuration}ms ${this.autoDrawEasing}`\n            path.style.transform = `scaleY(1)`\n          }\n          this.lastLength = length\n        })\n      },\n    },\n  },\n\n  methods: {\n    genGradient () {\n      const gradientDirection = this.gradientDirection\n      const gradient = this.gradient.slice()\n\n      // Pushes empty string to force\n      // a fallback to currentColor\n      if (!gradient.length) gradient.push('')\n\n      const len = Math.max(gradient.length - 1, 1)\n      const stops = gradient.reverse().map((color, index) =>\n        this.$createElement('stop', {\n          attrs: {\n            offset: index / len,\n            'stop-color': color || 'currentColor',\n          },\n        })\n      )\n\n      return this.$createElement('defs', [\n        this.$createElement('linearGradient', {\n          attrs: {\n            id: this._uid,\n            gradientUnits: 'userSpaceOnUse',\n            x1: gradientDirection === 'left' ? '100%' : '0',\n            y1: gradientDirection === 'top' ? '100%' : '0',\n            x2: gradientDirection === 'right' ? '100%' : '0',\n            y2: gradientDirection === 'bottom' ? '100%' : '0',\n          },\n        }, stops),\n      ])\n    },\n    genG (children: VNode[]) {\n      return this.$createElement('g', {\n        style: {\n          fontSize: '8',\n          textAnchor: 'middle',\n          dominantBaseline: 'mathematical',\n          fill: 'currentColor',\n        } as object, // TODO: TS 3.5 is too eager with the array type here\n      }, children)\n    },\n    genPath () {\n      const points = genPoints(this.normalizedValues, this.boundary)\n\n      return this.$createElement('path', {\n        attrs: {\n          d: genPath(points, this._radius, this.fill, this.parsedHeight),\n          fill: this.fill ? `url(#${this._uid})` : 'none',\n          stroke: this.fill ? 'none' : `url(#${this._uid})`,\n        },\n        ref: 'path',\n      })\n    },\n    genLabels (offsetX: number) {\n      const children = this.parsedLabels.map((item, i) => (\n        this.$createElement('text', {\n          attrs: {\n            x: item.x + offsetX + this._lineWidth / 2,\n            y: this.textY + (this.parsedLabelSize * 0.75),\n            'font-size': Number(this.labelSize) || 7,\n          },\n        }, [this.genLabel(item, i)])\n      ))\n\n      return this.genG(children)\n    },\n    genLabel (item: SparklineText, index: number) {\n      return this.$scopedSlots.label\n        ? this.$scopedSlots.label({ index, value: item.value })\n        : item.value\n    },\n    genBars () {\n      if (!this.value || this.totalValues < 2) return undefined as never\n\n      const bars = genBars(this.normalizedValues, this.boundary)\n      const offsetX = (Math.abs(bars[0].x - bars[1].x) - this._lineWidth) / 2\n\n      return this.$createElement('svg', {\n        attrs: {\n          display: 'block',\n          viewBox: `0 0 ${this.totalWidth} ${this.totalHeight}`,\n        },\n      }, [\n        this.genGradient(),\n        this.genClipPath(bars, offsetX, this._lineWidth, 'sparkline-bar-' + this._uid),\n        this.hasLabels ? this.genLabels(offsetX) : undefined as never,\n        this.$createElement('g', {\n          attrs: {\n            'clip-path': `url(#sparkline-bar-${this._uid}-clip)`,\n            fill: `url(#${this._uid})`,\n          },\n        }, [\n          this.$createElement('rect', {\n            attrs: {\n              x: 0,\n              y: 0,\n              width: this.totalWidth,\n              height: this.height,\n            },\n          }),\n        ]),\n      ])\n    },\n    genClipPath (bars: Bar[], offsetX: number, lineWidth: number, id: string) {\n      const rounding = typeof this.smooth === 'number'\n        ? this.smooth\n        : this.smooth ? 2 : 0\n\n      return this.$createElement('clipPath', {\n        attrs: {\n          id: `${id}-clip`,\n        },\n      }, bars.map(item => {\n        return this.$createElement('rect', {\n          attrs: {\n            x: item.x + offsetX,\n            y: item.y,\n            width: lineWidth,\n            height: item.height,\n            rx: rounding,\n            ry: rounding,\n          },\n        }, [\n          this.autoDraw ? this.$createElement('animate', {\n            attrs: {\n              attributeName: 'height',\n              from: 0,\n              to: item.height,\n              dur: `${this.autoDrawDuration}ms`,\n              fill: 'freeze',\n            },\n          }) : undefined as never,\n        ])\n      }))\n    },\n    genTrend () {\n      return this.$createElement('svg', this.setTextColor(this.color, {\n        attrs: {\n          ...this.$attrs,\n          display: 'block',\n          'stroke-width': this._lineWidth || 1,\n          viewBox: `0 0 ${this.width} ${this.totalHeight}`,\n        },\n      }), [\n        this.genGradient(),\n        this.hasLabels && this.genLabels(-(this._lineWidth / 2)),\n        this.genPath(),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    if (this.totalValues < 2) return undefined as never\n\n    return this.type === 'trend' ? this.genTrend() : this.genBars()\n  },\n})\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('v-sparkline',{style:(_vm.element.style),attrs:{\"fill\":_vm.propValue.fill,\"gradient\":_vm.propValue.selectedGradient,\"line-width\":_vm.propValue.width,\"padding\":_vm.propValue.padding,\"smooth\":_vm.propValue.radius || false,\"value\":_vm.propValue.value,\"auto-draw\":\"\"}})],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div>\r\n        <v-sparkline\r\n        :fill=\"propValue.fill\"\r\n        :gradient=\"propValue.selectedGradient\"\r\n        :line-width=\"propValue.width\"\r\n        :padding=\"propValue.padding\"\r\n        :smooth=\"propValue.radius || false\"\r\n        :value=\"propValue.value\"\r\n        :style=\"element.style\"\r\n        auto-draw\r\n        ></v-sparkline>\r\n    </div>\r\n</template>\r\n<script>\r\nimport OnEvent from '../common/OnEvent'\r\n\r\nexport default {\r\n    extends: OnEvent,\r\n    props: {\r\n        propValue: {\r\n            type: Object,\r\n            required: true,\r\n            default: () => {},\r\n        },\r\n        element: {\r\n            type: Object,\r\n            default: () => {},\r\n        },\r\n    },\r\n}\r\n</script>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Component.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Component.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Component.vue?vue&type=template&id=3a8db250&\"\nimport script from \"./Component.vue?vue&type=script&lang=js&\"\nexport * from \"./Component.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render, staticRenderFns\nimport script from \"./OnEvent.vue?vue&type=script&lang=js&\"\nexport * from \"./OnEvent.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<script>\r\nimport eventBus from '@/utils/eventBus'\r\n\r\nexport default {\r\n    props: {\r\n        linkage: {\r\n            type: Object,\r\n            default: () => {},\r\n        },\r\n        element: {\r\n            type: Object,\r\n            default: () => {},\r\n        },\r\n    },\r\n    created() {\r\n        if (this.linkage?.data?.length) {\r\n            eventBus.$on('v-click', this.onClick)\r\n            eventBus.$on('v-hover', this.onHover)\r\n            eventBus.$on('v-dblclick', this.onDblclick)\r\n        }\r\n    },\r\n    mounted() {\r\n        const { data, duration } = this.linkage || {}\r\n        if (data?.length) {\r\n            this.$el.style.transition = `all ${duration}s`\r\n        }\r\n    },\r\n    beforeDestroy() {\r\n        if (this.linkage?.data?.length) {\r\n            eventBus.$off('v-click', this.onClick)\r\n            eventBus.$off('v-hover', this.onHover)\r\n            eventBus.$on('v-dblclick', this.onDblclick)\r\n        }\r\n    },\r\n    methods: {\r\n        changeStyle(data = []) {\r\n            data.forEach(item => {\r\n                item.style.forEach(e => {\r\n                    if (e.key) {\r\n                        this.element.style[e.key] = e.value\r\n                    }\r\n                })\r\n            })\r\n        },\r\n\r\n        onClick(componentId) {\r\n            const data = this.linkage.data.filter(item => item.id === componentId && item.event === 'v-click')\r\n            this.changeStyle(data)\r\n        },\r\n\r\n        onDblclick(componentId) {\r\n            const data = this.linkage.data.filter(item => item.id === componentId && item.event === 'v-dblclick')\r\n            console.log('v-dblclick')\r\n            this.changeStyle(data)\r\n        },\r\n\r\n        onHover(componentId) {\r\n            const data = this.linkage.data.filter(item => item.id === componentId && item.event === 'v-hover')\r\n            this.changeStyle(data)\r\n        },\r\n    },\r\n}\r\n</script>\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./OnEvent.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./OnEvent.vue?vue&type=script&lang=js&\"","import Vue from 'vue'\nimport { VNodeData } from 'vue/types/vnode'\nimport { consoleError } from '../../util/console'\nimport { isCssColor } from '../../util/colorUtils'\n\nexport default Vue.extend({\n  name: 'colorable',\n\n  props: {\n    color: String,\n  },\n\n  methods: {\n    setBackgroundColor (color?: string | false, data: VNodeData = {}): VNodeData {\n      if (typeof data.style === 'string') {\n        // istanbul ignore next\n        consoleError('style must be an object', this)\n        // istanbul ignore next\n        return data\n      }\n      if (typeof data.class === 'string') {\n        // istanbul ignore next\n        consoleError('class must be an object', this)\n        // istanbul ignore next\n        return data\n      }\n      if (isCssColor(color)) {\n        data.style = {\n          ...data.style as object,\n          'background-color': `${color}`,\n          'border-color': `${color}`,\n        }\n      } else if (color) {\n        data.class = {\n          ...data.class,\n          [color]: true,\n        }\n      }\n\n      return data\n    },\n\n    setTextColor (color?: string | false, data: VNodeData = {}): VNodeData {\n      if (typeof data.style === 'string') {\n        // istanbul ignore next\n        consoleError('style must be an object', this)\n        // istanbul ignore next\n        return data\n      }\n      if (typeof data.class === 'string') {\n        // istanbul ignore next\n        consoleError('class must be an object', this)\n        // istanbul ignore next\n        return data\n      }\n      if (isCssColor(color)) {\n        data.style = {\n          ...data.style as object,\n          color: `${color}`,\n          'caret-color': `${color}`,\n        }\n      } else if (color) {\n        const [colorName, colorModifier] = color.toString().trim().split(' ', 2) as (string | undefined)[]\n        data.class = {\n          ...data.class,\n          [colorName + '--text']: true,\n        }\n        if (colorModifier) {\n          data.class['text--' + colorModifier] = true\n        }\n      }\n      return data\n    },\n  },\n})\n","import Vue from 'vue'\r\n// 用于监听、触发事件\r\nexport default new Vue()"],"names":["genPoints","values","boundary","minX","maxX","minY","maxY","totalValues","length","maxValue","Math","max","minValue","min","gridX","gridY","map","value","index","x","y","genBars","horizonY","abs","height","int","parseInt","checkCollinear","p0","p1","p2","getDistance","sqrt","pow","moveTo","to","from","radius","vector","unitVector","genPath","points","fill","start","shift","end","point","next","prev","isCollinear","threshold","isTooCloseForRadius","radiusForPoint","before","after","join","mixins","Colorable","extend","name","inheritAttrs","props","autoDraw","Boolean","autoDrawDuration","type","Number","default","autoDrawEasing","String","autoLineWidth","color","gradient","Array","gradientDirection","validator","val","includes","labels","labelSize","lineWidth","padding","showLabels","smooth","width","data","lastLength","computed","parsedPadding","this","parsedWidth","parsedHeight","parsedLabelSize","totalHeight","hasLabels","totalWidth","_lineWidth","totalPadding","parseFloat","$scopedSlots","label","parsedLabels","_values","len","i","item","push","normalizedValues","textY","_radius","watch","immediate","handler","$nextTick","$refs","path","getTotalLength","style","transformOrigin","transition","transform","getBoundingClientRect","strokeDasharray","strokeDashoffset","toString","methods","genGradient","slice","stops","reverse","$createElement","attrs","offset","id","_uid","gradientUnits","x1","y1","x2","y2","genG","children","fontSize","textAnchor","dominantBaseline","d","stroke","ref","genLabels","offsetX","genLabel","bars","display","viewBox","genClipPath","undefined","rounding","rx","ry","attributeName","dur","genTrend","setTextColor","$attrs","render","h","_vm","_c","propValue","extends","required","element","component","staticRenderFns","linkage","created","eventBus","mounted","duration","beforeDestroy","changeStyle","onClick","onDblclick","console","onHover","Vue","setBackgroundColor","consoleError","class","isCssColor","colorName","colorModifier","trim","split"],"sourceRoot":""}